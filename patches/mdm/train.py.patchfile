--- ./pnnlsolpaper/mdm/train.py	2025-04-16 00:56:12.242879750 -0700
+++ ./src/mdm/train.py	2025-04-09 20:17:41.390096156 -0700
@@ -18,18 +18,19 @@
 from sklearn.metrics import mean_absolute_error
 import pickle
 import json
-import mdm_model
-import config
-import mdm_utils
+from . import mdm_model
+from . import config
+from . import mdm_utils
+from .mdm_utils import create_file_path
 import datetime
 
 def run():
     
     to_remove = [ 'cas', 'ref', 'temp','inchi'] 
 
-    train = pd.read_csv(config.data_dir+"train.csv")
-    val = pd.read_csv(config.data_dir+"val.csv")
-    test = pd.read_csv(config.data_dir+"test.csv")
+    train = pd.read_csv(create_file_path(config.data_dir, "train.csv"))
+    val = pd.read_csv(create_file_path(config.data_dir, "val.csv"))
+    test = pd.read_csv(create_file_path(config.data_dir, "test.csv"))
 
 
     train = train.drop(to_remove, axis=1)
@@ -53,8 +54,8 @@
     model = mdm_model.create_model(x_train.shape[1])
 
     es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=config.patience)
-    os.system(f"rm {config.best_model}")
-    mc = ModelCheckpoint(f'{config.best_model}', monitor='val_loss', mode='min', save_best_only=True, verbose=1)
+    os.system(f"rm {create_file_path(config.best_model)}")
+    mc = ModelCheckpoint(create_file_path(f'{config.best_model}'), monitor='val_loss', mode='min', save_best_only=True, verbose=1)
 
     result = model.fit(x_train, y_train, batch_size = config.batch_size, epochs = config.max_epochs,
               verbose = 2, validation_data = (x_val,y_val), callbacks = [es,mc])
